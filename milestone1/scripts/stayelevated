#!/usr/bin/env python

import math
import rospy
import tf2_ros
import tf2_geometry_msgs
from tf.transformations import euler_from_quaternion
from geometry_msgs.msg import PoseStamped
from crazyflie_driver.msg import Position, Hover
import random
import readchar




def hight(msg):
    global h
    h = round(msg.pose.position.z,1)
    h = .2


def stay_callback(msg):
    global goal
    goal=msg
    goal.zDistance=h+goal.zDistance
    
    #rospy.loginfo(goal)

   


    

    
sub = rospy.Subscriber("cf1/pose", PoseStamped, hight)
hover_publisher=rospy.Publisher("/cf1/cmd_hover", Hover,queue_size=10) #Publishes current height and position 
hover_sub=rospy.Subscriber("goal", Hover, stay_callback)

last_msg=Hover()
last_msg.vx=0
last_msg.vy=0
last_msg.zDistance=0
last_msg.yawrate=0

goal=None


if __name__ == '__main__':
    global h, state
    rospy.init_node('stayelevated')
    rate = rospy.Rate(1)
    while not rospy.is_shutdown():
        print('loop')
        if goal:
            hover_publisher.publish(goal)
            goal=None
        else:
            last_msg.zDistance=h
            last_msg.vx=0
            last_msg.vy=0
            last_msg.yawrate=0
            hover_publisher.publish(last_msg)

            # publish(last_msg)
        print('rate')
        #rate.sleep()

          

            


    # rospy.spin()
    